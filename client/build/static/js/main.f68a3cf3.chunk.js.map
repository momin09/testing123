{"version":3,"sources":["data/countries_data.js","components/globe.js","components/SideBar.js","components/ComboBox.js","components/LineGraph.js","components/Graph.js","components/ChatBotManual.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["COUNTRIES_DATA","country","latitude","longitude","name","CustomGlobe","props","labelsData","lat","lng","size","color","code","updateDate","date","ttb","eurTtb","tts","eurTts","cadTtb","cadTts","audTtb","audTts","krwTtb","krwTts","jpyTtb","jpyTts","cnyTtb","cnyTts","gbpTtb","gbpTts","hkdTtb","hkdTts","usdTtb","usdTts","aedTtb","aedTts","globeEl","useRef","useState","features","hex","setHex","useEffect","HEX_DATA","kr","MAP_CENTER","altitude","current","pointOfView","class","style","marginBottom","id","ref","backgroundColor","labelLat","d","labelLng","labelText","labelSize","labelLabel","labelColor","useCallback","onLabelClick","window","open","labelDotRadius","labelAltitude","hexPolygonsData","hexPolygonResolution","hexPolygonMargin","hexPolygonColor","StickySideBar","top","fontSize","position","zIndex","cursor","to","smooth","duration","ComboBox","choice","setChoice","options","value","label","className","find","op","defaultValue","onChange","openMenuOnClick","getTargetCountry","console","log","LineGraph","targetCountry","setTargetCountry","data","setData","axios","get","toLowerCase","then","res","temp","map","day","slice","display","justifyContent","tableLayout","LineChart","width","height","margin","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","padding","Tooltip","Legend","align","iconSize","Line","type","stroke","strokeWidth","Graph","paddingBottom","paddingTop","textAlign","images","url","ChatBotManual","objectFit","showBullets","showNavs","navSize","Home","setDate","setEurTtb","setEurTts","setCadTtb","setCadTts","setAudTtb","setAudTts","setKrwTtb","setKrwTts","setJpyTtb","setJpyTts","setCnyTtb","setCnyTts","setGbpTtb","setGbpTts","setUsdTtb","setUsdTts","setHkdTtb","setHkdTts","setAedTtb","setAedTts","SideBar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"805dAAaA,EAAiB,CAC1B,CACEC,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,wBAER,CACEH,QAAS,KACTC,UAAW,UACXC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,UAAW,UACXC,WAAY,UACZC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,WAER,CACEH,QAAS,KACTC,UAAW,UACXC,UAAW,WACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,cAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,YAER,CACEH,QAAS,KACTC,UAAW,UACXC,WAAY,SACZC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,WACZC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,eAER,CACEH,QAAS,KACTC,UAAW,UACXC,WAAY,UACZC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,UACZC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,UACZC,KAAM,cAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,kBAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,UACZC,KAAM,sBAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,UAAW,SACXC,WAAY,UACZC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,QACZC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,MACVC,UAAW,UACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,UACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,SACZC,KAAM,kBAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,SACZC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,UACZC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,WAER,CACEH,QAAS,KACTC,UAAW,QACXC,UAAW,WACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,QACZC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,SACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,SAER,CACEH,QAAS,KACTC,UAAW,QACXC,UAAW,UACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,UACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,cAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,QACZC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,WACZC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,UAER,CACEH,QAAS,KACTC,UAAW,UACXC,UAAW,WACXC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,UACZC,KAAM,UAER,CACEH,QAAS,KACTC,UAAW,SACXC,WAAY,UACZC,KAAM,QAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,UACZC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,SACZC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,gBAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,UAER,CACEH,QAAS,KACTC,UAAW,SACXC,UAAW,UACXC,KAAM,YAER,CACEH,QAAS,KACTC,UAAW,UACXC,WAAY,UACZC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,WAER,CACEH,QAAS,KACTC,UAAW,UACXC,UAAW,UACXC,KAAM,iB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","file":"static/js/main.f68a3cf3.chunk.js","sourcesContent":["export const COUNTRIES_DATA = [\n    {\n      country: \"AE\",\n      latitude: 23.424076,\n      longitude: 53.847818,\n      name: \"United Arab Emirates\"\n    },\n    {\n      country: \"AO\",\n      latitude: -11.202692,\n      longitude: 17.873887,\n      name: \"Angola\"\n    },\n    {\n      country: \"AR\",\n      latitude: -38.416097,\n      longitude: -63.616672,\n      name: \"Argentina\"\n    },\n    {\n      country: \"AT\",\n      latitude: 47.516231,\n      longitude: 14.550072,\n      name: \"Austria\"\n    },\n    {\n      country: \"AU\",\n      latitude: -25.274398,\n      longitude: 133.775136,\n      name: \"Australia\"\n    },\n    {\n      country: \"BD\",\n      latitude: 23.684994,\n      longitude: 90.356331,\n      name: \"Bangladesh\"\n    },\n    {\n      country: \"BE\",\n      latitude: 50.503887,\n      longitude: 4.469936,\n      name: \"Belgium\"\n    },\n    {\n      country: \"BG\",\n      latitude: 42.733883,\n      longitude: 25.48583,\n      name: \"Bulgaria\"\n    },\n    {\n      country: \"BR\",\n      latitude: -14.235004,\n      longitude: -51.92528,\n      name: \"Brazil\"\n    },\n    {\n      country: \"CA\",\n      latitude: 56.130366,\n      longitude: -106.346771,\n      name: \"Canada\"\n    },\n    {\n      country: \"CH\",\n      latitude: 46.818188,\n      longitude: 8.227512,\n      name: \"Switzerland\"\n    },\n    {\n      country: \"CL\",\n      latitude: -35.675147,\n      longitude: -71.542969,\n      name: \"Chile\"\n    },\n    {\n      country: \"CN\",\n      latitude: 35.86166,\n      longitude: 104.195397,\n      name: \"China\"\n    },\n    {\n      country: \"CO\",\n      latitude: 4.570868,\n      longitude: -74.297333,\n      name: \"Colombia\"\n    },\n    {\n      country: \"CR\",\n      latitude: 9.748917,\n      longitude: -83.753428,\n      name: \"Costa Rica\"\n    },\n    {\n      country: \"CZ\",\n      latitude: 49.817492,\n      longitude: 15.472962,\n      name: \"Czech Republic\"\n    },\n    {\n      country: \"DE\",\n      latitude: 51.165691,\n      longitude: 10.451526,\n      name: \"Germany\"\n    },\n    {\n      country: \"DK\",\n      latitude: 56.26392,\n      longitude: 9.501785,\n      name: \"Denmark\"\n    },\n    {\n      country: \"DO\",\n      latitude: 18.735693,\n      longitude: -70.162651,\n      name: \"Dominican Republic\"\n    },\n    {\n      country: \"DZ\",\n      latitude: 28.033886,\n      longitude: 1.659626,\n      name: \"Algeria\"\n    },\n    {\n      country: \"EC\",\n      latitude: -1.831239,\n      longitude: -78.183406,\n      name: \"Ecuador\"\n    },\n    {\n      country: \"EG\",\n      latitude: 26.820553,\n      longitude: 30.802498,\n      name: \"Egypt\"\n    },\n    {\n      country: \"ES\",\n      latitude: 40.463667,\n      longitude: -3.74922,\n      name: \"Spain\"\n    },\n    {\n      country: \"ET\",\n      latitude: 9.145,\n      longitude: 40.489673,\n      name: \"Ethiopia\"\n    },\n    {\n      country: \"FI\",\n      latitude: 61.92411,\n      longitude: 25.748151,\n      name: \"Finland\"\n    },\n    {\n      country: \"FR\",\n      latitude: 46.227638,\n      longitude: 2.213749,\n      name: \"France\"\n    },\n    {\n      country: \"GB\",\n      latitude: 55.378051,\n      longitude: -3.435973,\n      name: \"United Kingdom\"\n    },\n    {\n      country: \"GH\",\n      latitude: 7.946527,\n      longitude: -1.023194,\n      name: \"Ghana\"\n    },\n    {\n      country: \"GR\",\n      latitude: 39.074208,\n      longitude: 21.824312,\n      name: \"Greece\"\n    },\n    {\n      country: \"GT\",\n      latitude: 15.783471,\n      longitude: -90.230759,\n      name: \"Guatemala\"\n    },\n    {\n      country: \"HK\",\n      latitude: 22.396428,\n      longitude: 114.109497,\n      name: \"Hong Kong\"\n    },\n    {\n      country: \"HU\",\n      latitude: 47.162494,\n      longitude: 19.503304,\n      name: \"Hungary\"\n    },\n    {\n      country: \"ID\",\n      latitude: -0.789275,\n      longitude: 113.921327,\n      name: \"Indonesia\"\n    },\n    {\n      country: \"IE\",\n      latitude: 53.41291,\n      longitude: -8.24389,\n      name: \"Ireland\"\n    },\n    {\n      country: \"IL\",\n      latitude: 31.046051,\n      longitude: 34.851612,\n      name: \"Israel\"\n    },\n    {\n      country: \"IN\",\n      latitude: 20.593684,\n      longitude: 78.96288,\n      name: \"India\"\n    },\n    {\n      country: \"IT\",\n      latitude: 41.87194,\n      longitude: 12.56738,\n      name: \"Italy\"\n    },\n    {\n      country: \"JP\",\n      latitude: 36.204824,\n      longitude: 138.252924,\n      name: \"Japan\"\n    },\n    {\n      country: \"KE\",\n      latitude: -0.023559,\n      longitude: 37.906193,\n      name: \"Kenya\"\n    },\n    {\n      country: \"KR\",\n      latitude: 35.907757,\n      longitude: 127.766922,\n      name: \"South Korea\"\n    },\n    {\n      country: \"KW\",\n      latitude: 29.31166,\n      longitude: 47.481766,\n      name: \"Kuwait\"\n    },\n    {\n      country: \"LK\",\n      latitude: 7.873054,\n      longitude: 80.771797,\n      name: \"Sri Lanka\"\n    },\n    {\n      country: \"LT\",\n      latitude: 55.169438,\n      longitude: 23.881275,\n      name: \"Lithuania\"\n    },\n    {\n      country: \"LU\",\n      latitude: 49.815273,\n      longitude: 6.129583,\n      name: \"Luxembourg\"\n    },\n    {\n      country: \"MA\",\n      latitude: 31.791702,\n      longitude: -7.09262,\n      name: \"Morocco\"\n    },\n    {\n      country: \"MO\",\n      latitude: 22.198745,\n      longitude: 113.543873,\n      name: \"Macau\"\n    },\n    {\n      country: \"MX\",\n      latitude: 23.634501,\n      longitude: -102.552784,\n      name: \"Mexico\"\n    },\n    {\n      country: \"MY\",\n      latitude: 4.210484,\n      longitude: 101.975766,\n      name: \"Malaysia\"\n    },\n    {\n      country: \"NG\",\n      latitude: 9.081999,\n      longitude: 8.675277,\n      name: \"Nigeria\"\n    },\n    {\n      country: \"NL\",\n      latitude: 52.132633,\n      longitude: 5.291266,\n      name: \"Netherlands\"\n    },\n    {\n      country: \"NO\",\n      latitude: 60.472024,\n      longitude: 8.468946,\n      name: \"Norway\"\n    },\n    {\n      country: \"NZ\",\n      latitude: -40.900557,\n      longitude: 174.885971,\n      name: \"New Zealand\"\n    },\n    {\n      country: \"PA\",\n      latitude: 8.537981,\n      longitude: -80.782127,\n      name: \"Panama\"\n    },\n    {\n      country: \"PE\",\n      latitude: -9.189967,\n      longitude: -75.015152,\n      name: \"Peru\"\n    },\n    {\n      country: \"PH\",\n      latitude: 12.879721,\n      longitude: 121.774017,\n      name: \"Philippines\"\n    },\n    {\n      country: \"PL\",\n      latitude: 51.919438,\n      longitude: 19.145136,\n      name: \"Poland\"\n    },\n    {\n      country: \"PR\",\n      latitude: 18.220833,\n      longitude: -66.590149,\n      name: \"Puerto Rico\"\n    },\n    {\n      country: \"PT\",\n      latitude: 39.399872,\n      longitude: -8.224454,\n      name: \"Portugal\"\n    },\n    {\n      country: \"QA\",\n      latitude: 25.354826,\n      longitude: 51.183884,\n      name: \"Qatar\"\n    },\n    {\n      country: \"RO\",\n      latitude: 45.943161,\n      longitude: 24.96676,\n      name: \"Romania\"\n    },\n    {\n      country: \"RU\",\n      latitude: 61.52401,\n      longitude: 105.318756,\n      name: \"Russia\"\n    },\n    {\n      country: \"SA\",\n      latitude: 23.885942,\n      longitude: 45.079162,\n      name: \"Saudi Arabia\"\n    },\n    {\n      country: \"SE\",\n      latitude: 60.128161,\n      longitude: 18.643501,\n      name: \"Sweden\"\n    },\n    {\n      country: \"SG\",\n      latitude: 1.352083,\n      longitude: 103.819836,\n      name: \"Singapore\"\n    },\n    {\n      country: \"SI\",\n      latitude: 46.151241,\n      longitude: 14.995463,\n      name: \"Slovenia\"\n    },\n    {\n      country: \"SK\",\n      latitude: 48.669026,\n      longitude: 19.699024,\n      name: \"Slovakia\"\n    },\n    {\n      country: \"TH\",\n      latitude: 15.870032,\n      longitude: 100.992541,\n      name: \"Thailand\"\n    },\n    {\n      country: \"TR\",\n      latitude: 38.963745,\n      longitude: 35.243322,\n      name: \"Turkey\"\n    },\n    {\n      country: \"TW\",\n      latitude: 23.69781,\n      longitude: 120.960515,\n      name: \"Taiwan\"\n    },\n    {\n      country: \"TZ\",\n      latitude: -6.369028,\n      longitude: 34.888822,\n      name: \"Tanzania\"\n    },\n    {\n      country: \"UY\",\n      latitude: -32.522779,\n      longitude: -55.765835,\n      name: \"Uruguay\"\n    },\n    {\n      country: \"VN\",\n      latitude: 14.058324,\n      longitude: 108.277199,\n      name: \"Vietnam\"\n    },\n    {\n      country: \"ZA\",\n      latitude: -30.559482,\n      longitude: 22.937506,\n      name: \"South Africa\"\n    }\n  ];\n  ","import React from \"react\";\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { COUNTRIES_DATA } from \"../data/countries_data\";\nimport HEX_DATA from \"../data/countries_hex_data.json\";\nimport Globe from \"react-globe.gl\";\n\nexport default function CustomGlobe( props ) {\n\n\nconst labelsData = [\n\n  { name: \"EUROPE\",\n    lat: 46.227638,\n    lng: 2.213749, \n    size: 1, \n    color: \"yellow\",\n    code: \"EUR\",\n    updateDate : props.date,\n    ttb : props.eurTtb,\n    tts : props.eurTts,\n  },\n  {\n    name: \"Canada\",\n    lat: 56.130366,\n    lng: -106.34677099999999,\n    size: 1,\n    color: \"white\",\n    code: \"CAD\",\n    updateDate : props.date,\n    ttb : props.cadTtb,\n    tts : props.cadTts,\n\n  },\n  {\n      name: \"Australia\",\n      lat: -25.274398,\n      lng: 133.775136,\n      size: 1,\n      color: \"white\",\n      code: \"AUD\",\n      updateDate : props.date,\n      ttb : props.audTtb,\n      tts : props.audTts,\n\n  },\n  {\n      name: \"South Korea\",\n      lat: 35.907757000000004,\n      lng: 127.766922,\n      size: 1,\n      color: \"white\",\n      code: \"WON\",\n      updateDate : props.date,\n      ttb : props.krwTtb,\n      tts : props.krwTts,\n  },\n  {\n    name: \"Japan\",\n    lat: 36.204824,\n    lng: 138.252924,\n    size: 1,\n    color: \"white\",\n    code: \"JPY(100)\",\n    updateDate : props.date,\n    ttb : props.jpyTtb,\n    tts : props.jpyTts,\n },\n  {\n      name: \"China\",\n      lat: 35.86166,\n      lng: 104.195397,\n      size: 1,\n      color: \"white\",\n      code: \"CNY\",\n      updateDate : props.date,\n      ttb : props.cnyTtb,\n      tts : props.cnyTts,\n\n  },\n  {\n      name: \"United Kingdom\",\n      lat: 55.378051,\n      lng: -3.435973,\n      size: 1,\n      color: \"white\",\n      code: \"GBP\",\n      updateDate : props.date,\n      ttb : props.gbpTtb,\n      tts : props.gbpTts,\n\n  },\n  {\n      name: \"Hong Kong\",\n      lat: 22.396428,\n      lng: 114.109497,\n      size: 1,\n      color: \"white\",\n      code: \"HKD\",\n      updateDate : props.date,\n      ttb : props.hkdTtb,\n      tts : props.hkdTts,\n\n  },\n  {\n      name: \"United States\",\n      lat: 42.813297,\n      lng: -106.34677099999999,\n      size: 1,\n      color: \"white\",\n      code: \"USD\",\n      updateDate : props.date,\n      ttb : props.usdTtb,\n      tts : props.usdTts,\n\n  },\n  {\n      name: \"United Arab Emirates\",\n      lat: 23.424076,\n      lng: 53.847818,\n      size : 1,\n      color: \"white\",\n      code: \"AED\",\n      updateDate : props.date,\n      ttb : props.aedTtb,\n      tts : props.aedTts,\n\n    },\n];\n\n\n  const globeEl = useRef();\n  //console.log(COUNTRIES_DATA.findIndex((e) => e.name === \"South Korea\" )) 39\n  const [hex, setHex] = useState({ features: [] });\n  useEffect(() => {\n    setHex(HEX_DATA);\n  }, []);\n\n  useEffect(() => {\n    // globeEl.current.controls().autoRotate = true;\n    // globeEl.current.controls().autoRotateSpeed = 0.2;\n    const kr = COUNTRIES_DATA[39];\n    const MAP_CENTER = { lat: kr.latitude, lng: kr.longitude, altitude: 1.5 };\n    globeEl.current.pointOfView(MAP_CENTER, 0);\n  }, [globeEl]);\n\n  return (\n    <div class = 'wrapper' style = {{marginBottom : '20%'}}>\n        <div id = 'globe' >\n            <Globe \n            ref={globeEl}\n            backgroundColor=\"#000\"\n            labelsData= {labelsData}\n            labelLat={(d) => d.lat}\n            labelLng={(d) => d.lng}\n            labelText={(d) => d.name}\n            labelSize={(d) => 0.5 + d.size}\n            labelLabel={(d) => `\n            <div>\n            <br></br>\n            <b>통화 코드 : ${d.code}</b></div>\n            <li><b>받으실 때 : ${d.ttb}</b></li>\n            <li><b>보내실 때 : ${d.tts}</b></li>\n            <li><b>업데이트 날짜 : ${d.updateDate}</b></li>\n            <i>자세한 정보를 보시려면 클릭하세요</i>\n            `}\n            \n            labelColor={useCallback(() => \"yellow\", [])}\n            onLabelClick={() => window.open('https://www.koreaexim.go.kr/site/program/financial/exchange?menuid=001001004002001')}\n            labelDotRadius={0.4}\n            labelAltitude={0.05}\n            hexPolygonsData={hex.features}\n            hexPolygonResolution={3} //values higher than 3 makes it buggy\n            hexPolygonMargin={0.62}\n            hexPolygonColor={useCallback(() => \"#1b66b1\", [])}\n            />\n        </div>\n        \n    </div>\n  );\n}\n","import React from 'react'\nimport { Link as Scroll } from 'react-scroll';\n\n\nfunction StickySideBar() {\n\n    const linkStyle ={\n        top:0,\n        fontSize: '1.3rem',\n        position: 'fixed',\n        zIndex: '1',\n        marginBottom : '0.3rem',\n        cursor : 'pointer',\n    }\n\n    return (\n\n        <div style={{...linkStyle, backgroundColor : '#000'}}>\n            <Scroll\n                to=\"globe\"\n                smooth={true}\n                duration={600}\n                style = {{color: 'yellow'}}\n            >\n                Globe\n            </Scroll>\n    \n            <p style = {{fontSize : '0.3rem'}}></p>\n    \n            <Scroll\n                to=\"graph\"\n                smooth={true}\n                duration={600}\n                style = {{color: 'yellow'}}\n            >\n                Chart\n            </Scroll>\n \n            <p style = {{fontSize : '0.3rem'}} ></p>\n\n            <Scroll\n                to=\"chatBotManual\"\n                smooth={true}\n                duration={600}\n                style = {{color: 'yellow'}}\n            >\n               Chat Bot\n            </Scroll>\n        </div>\n    )\n}\n\nexport default StickySideBar\n\n\n","import {React, useState} from \"react\";\nimport Select from \"react-select\";\n\n\nfunction ComboBox(props) {\n\n    const [choice, setChoice] = useState('');\n\n    const sendTargetCountry = () =>{\n      props.getTargetCountry(choice)\n      console.log(choice)\n      console.log('that was choice from combobox')\n  }\n\n    const onChange = (value) => {\n        setChoice(value)\n    }\n\n    const options = [\n        { value: 'AED', label: 'United Arab Emirates' },\n        { value: 'AUD', label: 'Australia' },\n        { value: 'CAD', label: 'Canada' },\n        { value: 'CNY', label: 'China' },\n        { value: 'EUR', label: 'Europe' },\n        { value: 'GBP', label: 'United Kingdom' },\n        { value: 'HKD', label: 'Hong Kong' },\n        { value: 'JPY_100', label: 'Japan' },\n        { value: 'KRW', label: 'Korea' },\n        { value: 'USD', label: 'United States' }\n    ];\n\n  return (\n    <div className=\"App\" style = {{fontSize : '1rem'}}>\n      <Select \n        options={options}\n        value = {options.find(op => {\n            return op.value === choice\n        })}\n        defaultValue={options[0]}\n        onChange={(value) => {\n            onChange(value.value)\n        }}\n        openMenuOnClick = {sendTargetCountry()}\n        />\n    </div>\n  );\n}\n\nexport default ComboBox;","import {React, useState, useEffect} from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport axios from 'axios';\nimport ComboBox from './ComboBox';\n\n\nfunction LineGraph() {\n\n    const [targetCountry, setTargetCountry] = useState('aed')\n    \n    const getTargetCountry = (country) => {\n        setTargetCountry(country);\n    }\n\n    console.log(targetCountry)\n    console.log('that was targetCountry')\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/alltime/'+targetCountry.toLowerCase())\n        .then(res => {\n            console.log(res.data)\n            const temp = res.data\n            temp.map((day) => {\n                return day.date = day.date.slice(0,10)\n            })\n            setData(temp)\n        })\n    },[targetCountry])\n\n\n\n    return (\n\n        <div style = {{display : 'flex',justifyContent : 'center',tableLayout : 'fixed'}}>\n        <ComboBox \n            getTargetCountry = {getTargetCountry}>\n        </ComboBox>\n\n        <LineChart\n            width={900}\n            height={550}\n            data={data}\n            margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis domain={['dataMin' , 'dataMax']} padding={{ top: 10, bottom : 10}} />\n            <Tooltip />\n            <Legend align = \"left\" iconSize = {28} height = {1}/>\n            <Line type=\"monotone\" dataKey=\"ttb\" stroke=\"#8884d8\" strokeWidth={3}/>\n            <Line type=\"monotone\" dataKey=\"tts\" stroke=\"#82ca9d\" strokeWidth={3}/>\n        </LineChart>\n        </div>\n    )\n}\n\nexport default LineGraph\n","import {React} from 'react'\n\nimport LineGraph from './LineGraph'\n\n\nfunction Graph() \n{  \n\n    return (\n        <div id = 'graph' style = {{paddingBottom : '13%', paddingTop : '3%', textAlign : 'center'}}>\n            <h1 style = {{color : 'yellow'}}> Chart </h1>\n            <p style = {{color : 'yellow'}}>\n                차트를 확인하고 싶으신 국가를 선택해 주세요\n            </p>\n\n            <div style = {{display : 'flex',justifyContent : 'center'}}> \n\n            <LineGraph></LineGraph>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Graph\n","import React from 'react';\nimport SimpleImageSlider from \"react-simple-image-slider\";\n\n\nconst images = [\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_1.jpg?raw=true' },\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_2.jpg?raw=true' },\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_3.jpg?raw=true' },\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_4.jpg?raw=true' },\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_5.jpg?raw=true' },\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_6.jpg?raw=true' },\n];\n\nfunction ChatBotManual() {\n\n    return (\n        <div id = 'wrapper' style = {{backgroundColor : '#000' , color : 'yellow', textAlign : 'center', paddingBottom : '15%'}}>\n\n            <h1 id = 'chatBotManual'>\n                Chat Bot 사용 설명서\n            </h1>\n            <p style = {{paddingBottom : '3%'}}> \n                저희는 텔레그램 챗봇 서비스 역시 제공하고 있습니다.<br></br>\n                주기적인 알림, 원터치 환율 알림 등 다양한 서비스를 사용해보세요!\n\n            </p>\n\n            <div style = {{display : 'flex',justifyContent : 'center',objectFit:'cover'}}>\n                <SimpleImageSlider\n                width={'590px'}\n                height={'450px'}\n                images={images}\n                showBullets={true}\n                showNavs={true}\n                navSize='50'\n                />\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default ChatBotManual\n","import {React, useState, useEffect} from 'react';\nimport CustomGlobe from '../components/globe';\nimport SideBar from '../components/SideBar';\nimport Graph from '../components/Graph'\nimport ChatBotManual from '../components/ChatBotManual';\nimport axios from 'axios';\n\n\n\n\nfunction Home() {\n    const [date,setDate] = useState('');\n\n    const [eurTtb, setEurTtb] = useState('');\n    const [eurTts, setEurTts] = useState('');\n\n    const [cadTtb, setCadTtb] = useState('');\n    const [cadTts, setCadTts] = useState('');\n\n    const [audTtb, setAudTtb] = useState('');\n    const [audTts, setAudTts] = useState('');\n\n    const [krwTtb, setKrwTtb] = useState('');\n    const [krwTts, setKrwTts] = useState('');\n\n    const [jpyTtb, setJpyTtb] = useState('');\n    const [jpyTts, setJpyTts] = useState('');\n\n    const [cnyTtb, setCnyTtb] = useState('');\n    const [cnyTts, setCnyTts] = useState('');\n\n    const [gbpTtb, setGbpTtb] = useState('');\n    const [gbpTts, setGbpTts] = useState('');\n\n    const [usdTtb, setUsdTtb] = useState('');\n    const [usdTts, setUsdTts] = useState('');\n\n    const [hkdTtb, setHkdTtb] = useState('');\n    const [hkdTts, setHkdTts] = useState('');\n\n    const [aedTtb, setAedTtb] = useState('');\n    const [aedTts, setAedTts] = useState('');\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/eur')\n            .then(res => setDate(res.data[0].updateDate))\n    },[])\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/eur')\n            .then(res => {\n                setEurTtb(res.data[1].ttb)\n                setEurTts(res.data[1].tts)\n            })\n    },[])\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/cad')\n            .then(res => {\n                setCadTtb(res.data[1].ttb)\n                setCadTts(res.data[1].tts)\n            })\n    },[])\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/aud')\n            .then(res => {\n                setAudTtb(res.data[1].ttb)\n                setAudTts(res.data[1].tts)\n            })\n    },[])\n\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/cny')\n            .then(res => {\n                setCnyTtb(res.data[1].ttb)\n                setCnyTts(res.data[1].tts)\n            })\n    },[])\n\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/krw')\n            .then(res => {\n                setKrwTtb(res.data[1].ttb)\n                setKrwTts(res.data[1].tts)\n            })\n    },[])\n\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/jpy_100')\n            .then(res => {\n                setJpyTtb(res.data[1].ttb)\n                setJpyTts(res.data[1].tts)\n            })\n    },[])\n\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/usd')\n            .then(res => {\n                setUsdTtb(res.data[1].ttb)\n                setUsdTts(res.data[1].tts)\n            })\n    },[])\n\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/gbp')\n            .then(res => {\n                setGbpTtb(res.data[1].ttb)\n                setGbpTts(res.data[1].tts)\n            })\n    },[])\n\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/aed')\n            .then(res => {\n                setAedTtb(res.data[1].ttb)\n                setAedTts(res.data[1].tts)\n            })\n    },[])\n\n\n    useEffect(() => {\n        axios.get('http://k8s-default-backendi-6566bc7d31-326551117.ap-northeast-2.elb.amazonaws.com/api/today/hkd')\n            .then(res => {\n                setHkdTtb(res.data[1].ttb)\n                setHkdTts(res.data[1].tts)\n            })\n    },[])\n\n\n    return (\n        <div className = 'wrapper' style = {{backgroundColor : \"#000\"}}>\n            <CustomGlobe \n                date = {date} \n                eurTtb = {eurTtb}\n                eurTts = {eurTts}\n                gbpTtb = {gbpTtb}\n                gbpTts = {gbpTts}\n                aedTts = {aedTts} \n                aedTtb = {aedTtb} \n                cnyTts = {cnyTts} \n                cnyTtb = {cnyTtb} \n                hkdTts = {hkdTts} \n                hkdTtb = {hkdTtb} \n                krwTts = {krwTts} \n                krwTtb = {krwTtb} \n                jpyTts = {jpyTts} \n                jpyTtb = {jpyTtb} \n                cadTts = {cadTts} \n                cadTtb = {cadTtb} \n                usdTts = {usdTts} \n                usdTtb = {usdTtb} \n                audTtb = {audTtb} \n                audTts = {audTts} \n             ></CustomGlobe>\n            <Graph></Graph>\n            <ChatBotManual></ChatBotManual>\n            <SideBar></SideBar>\n\n\n        </div>\n    )\n};\n\nexport default Home\n","import React from 'react';\nimport Home from './pages/Home';\n\n\nfunction App() {\n\n  return (\n    <Home></Home>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}